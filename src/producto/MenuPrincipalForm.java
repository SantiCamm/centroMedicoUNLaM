package producto;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

public class MenuPrincipalForm extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	private static Logger logger = Logger.getLogger(MenuPrincipalForm.class.getName());	
	private static final String msjAyuda = "Con \"Medicus\" usted puede realizar las siguientes tareas:\n"
			+"*Ingreso, control, y actualización de los datos de un paciente.\n"
			+"*Control y actualización de la historia clínica de un paciente.\n"
			+"*Ingreso, control, y actualización de los datos de un profesional.\n"
			+"*Guardado de datos de pacientes y médicos.\n"
			+ "\nPara acceder a las opciones, ingrese desde el \"Menú principal\" en la barra superior.";
	
	private static final String rutaActual = Paths.get(".").toAbsolutePath().normalize().toString();
    private static final String rutaArchivoPacientes = rutaActual+"\\datopac.txt";
    private static final String rutaArchivoSituacionPacientes = rutaActual+"\\situpac.txt";
    private static final String rutaArchivoMedicos = rutaActual+"\\datomed.txt";
    
    // frames (para chequear si se encuentran visibles)
    public static DatosPaciente dp;
    public static DatosMedico dm;
    public static SituacionPaciente sp;
    public static ListadoPaciente lp;
    public static ListadoEnfermedad le;
	
    /*
     * Constructor
     */
    public MenuPrincipalForm() {
        initComponents();
        CenteredFrame(this);
        dp = new DatosPaciente();
        dm = new DatosMedico();
        sp = new SituacionPaciente();
        lp = new ListadoPaciente();
        le = new ListadoEnfermedad();
    }
    
    /*
     * Centra el JFrame en la pantalla
     */
    public static void CenteredFrame(javax.swing.JFrame objFrame){
        Dimension objDimension = Toolkit.getDefaultToolkit().getScreenSize();
        int iCoordX = (objDimension.width - objFrame.getWidth()) / 2;
        int iCoordY = (objDimension.height - objFrame.getHeight()) / 2;
        objFrame.setLocation(iCoordX, iCoordY); 
    } 

    public static String getRutaArchivoPacientes() {
        return rutaArchivoPacientes;
    }

    public static String getRutaArchivoSituacionPacientes() {
        return rutaArchivoSituacionPacientes;
    }

    public static String getRutaArchivoMedicos() {
        return rutaArchivoMedicos;
    }
    
    /*
     * Valida si una cadena representa a un numero
     */
    public static boolean isNumeric(String str) {
        try {
            Double.parseDouble(str);
        }
        catch(NumberFormatException nfe) {
            return false;
        }
        return true;
    }
    
    /*
     * Verifica si el codigo existe, dependiendo si es un paciente o un medico
     */
    public static boolean existe(String tipo, String codigo) {
        String file = null, read, cod;
        BufferedReader br=null;
        File f;
        
        switch(tipo) {
            case "paciente":
                file = getRutaArchivoPacientes();
                break;
            case "medico":
                file = getRutaArchivoMedicos();
                break;
        }
        
        f = new File(file);
        
        if(f.exists()) {
            try {
                br = new BufferedReader(new FileReader(file));
                try {
                    while ((read = br.readLine()) != null) {
                        // separo los campos y obtengo los valores
                        String[] campos = read.split("\\|");
                        cod = campos[0]; // el primer campo es el cÃ³digo
                        
                        // si coinciden los cÃ³digos el registro existe
                        if(codigo.equals(cod)) {
                            return true;
                        }
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null,"Hubo un error al leer los datos");
                }
                
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null,"Error: archivo no encontrado","Error",JOptionPane.ERROR_MESSAGE);
            }  
            finally{
            	try {
					br.close();
				} catch (IOException e) {}
            }
        }

        return false;
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        
        logger.info("Entrando al menu principal.");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.setTitle("Medicus - Menú Principal");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Medicus - Menú Principal");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Centro Médico \"UNLaM\"");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Para comenzar a utilizar la aplicación por favor escoja la opción deseada desde el menú principal.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        jMenu1.setText("Menú principal");

        jMenu2.setText("Ingreso de datos");
        
        jMenuItem7.setText("Ayuda...");        

        jMenuItem2.setText("Datos del paciente");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Situación del paciente");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Datos del médico");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenu1.add(jMenu2);       

        jMenu3.setText("Informes");

        jMenuItem5.setText("Listado de pacientes por médico");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Enfermedades que atiende cada médico");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenu1.add(jMenu3);
        
        jMenu1.add(jMenuItem7);
        jMenuItem7.addActionListener(new ActionListener() {			
			@Override
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(null, msjAyuda, "Ayuda", JOptionPane.INFORMATION_MESSAGE);				
			}
		});

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
     * Cierra la aplicacion
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(dp.getState()==ICONIFIED)
            dp.setState(NORMAL);
        
        if(!dp.isShowing())
            dp.cleanForm();
            
        dp.pack();
        dp.setVisible(true);  
               
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if(sp.getState()==ICONIFIED)
            sp.setState(NORMAL);
        
        if(!sp.isShowing())
            sp.cleanForm();
        
        sp.pack();
        sp.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if(lp.getState()==ICONIFIED)
            lp.setState(NORMAL);
        
        if(!lp.isShowing())
            lp.cleanForm();
        
        lp.pack();
        lp.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if(dm.getState()==ICONIFIED)
            dm.setState(NORMAL);
        
        if(!dm.isShowing())
            dm.cleanForm();
        
        dm.pack();
        dm.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        if(le.getState()==ICONIFIED)
            le.setState(NORMAL);
        
        if(!le.isShowing())
            le.cleanForm();
        
        le.pack();
        le.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;    
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
